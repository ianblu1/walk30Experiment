-messagesToShow =  participant.messagesUnflaggedOrChangedWithinNSeconds(3600).sort_by{|message| message.id}
%tr
	%td= link_to participant.id, participant
	- messagesToShow.each do |message|
		%tr
			%td=''
			%td= message.dateTimeForDisplay.in_time_zone("Pacific Time (US & Canada)").strftime("%m/%d")
			%td= message.dateTimeForDisplay.in_time_zone("Pacific Time (US & Canada)").strftime("%I:%M%p")
				
			-if message.received?
				%td= ''
				%td= message.summaryString
			-elsif message.delivered?
				%td= message.summaryString
				%td= ''				
			-elsif message.pending?
				%td= "PENDING: " + message.summaryString
				%td= ''
			-elsif message.canceled?
				%td= "CANCELED: " + message.summaryString
				%td= ''
			-else
				%td= ''
				%td= ''


			-if message.pending?
				%td= link_to "deliver", deliver_message_path(message), :method => :put 
				%td= link_to "cancel", cancel_message_path(message), :method => :put 
			-else
				- if message.flagNegative? 
					%td= "negative" 
				-else
					%td=link_to "negative", flagNegative_message_path(message), :method => :put  
				- if message.flagNeutral? 
					%td= "neutral" 
				-else
					%td=link_to "neutral", flagNeutral_message_path(message), :method => :put  
				- if message.flagPositive? 
					%td= "positive" 
				-else
					%td=link_to "positive", flagPositive_message_path(message), :method => :put  
